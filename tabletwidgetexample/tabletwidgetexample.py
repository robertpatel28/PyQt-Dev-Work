# Form implementation generated from reading ui file 'tablewidgetexample.ui'
#
# Created by: PyQt6 UI code generator 6.8.0
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt6 import QtCore, QtGui, QtWidgets
import pymysql as mdb


class Ui_tableWidgetExample(object):
    def setupUi(self, tableWidgetExample):
        tableWidgetExample.setObjectName("tableWidgetExample")
        tableWidgetExample.resize(1115, 850)
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(9)
        tableWidgetExample.setFont(font)
        self.centralwidget = QtWidgets.QWidget(parent=tableWidgetExample)
        self.centralwidget.setObjectName("centralwidget")
        self.btnDisplay = QtWidgets.QPushButton(parent=self.centralwidget)
        self.btnDisplay.setGeometry(QtCore.QRect(540, 170, 93, 28))
        self.btnDisplay.setObjectName("btnDisplay")
        self.tblWidgetStudentData = QtWidgets.QTableWidget(parent=self.centralwidget)
        self.tblWidgetStudentData.setGeometry(QtCore.QRect(380, 310, 461, 231))
        self.tblWidgetStudentData.setObjectName("tblWidgetStudentData")
        self.tblWidgetStudentData.setColumnCount(0)
        self.tblWidgetStudentData.setRowCount(0)
        tableWidgetExample.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(parent=tableWidgetExample)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1115, 23))
        self.menubar.setObjectName("menubar")
        tableWidgetExample.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(parent=tableWidgetExample)
        self.statusbar.setObjectName("statusbar")
        tableWidgetExample.setStatusBar(self.statusbar)

        self.retranslateUi(tableWidgetExample)
        QtCore.QMetaObject.connectSlotsByName(tableWidgetExample)
        
        self.connecttodb()
        
        self.load_data()
        
        self.btnDisplay.clicked.connect(self.display_data)
        
        
    def display_data(self):
        try:
            connectionobj = self.connecttodb()
            cursorobj = connectionobj.cursor()
            
            cursorobj.execute("select * from studentinfo")
            results = cursorobj.fetchall()
            # Find number of rows in the result set
            row_length = len(results)
            # Find number of columns in the result set
            col_length = len(cursorobj.description)
            
            col_header = ["Student Id", "Student Name", "Student Age", "Student Score"]
            
            self.tblWidgetStudentData.setRowCount(row_length)
            self.tblWidgetStudentData.setColumnCount(col_length)
            self.tblWidgetStudentData.setHorizontalHeaderLabels(col_header)
            
            for rownumber, rowdata in enumerate(results):
                for colnumber, coldata in enumerate(rowdata):
                    self.tblWidgetStudentData.setItem(rownumber, colnumber, QtWidgets.QTableWidgetItem(str(coldata)))
                    
        except Exception as e:
            print(e)
        finally:
            connectionobj.close()
        
        
    def load_data(self):
        try:
            connectionobj = self.connecttodb()
            cursorobj = connectionobj.cursor()
            with open("data.txt", "r") as filename:
                for line in filename:
                    # data is a list with 4 items (id, name, age, score)
                    # [101, Steve Sides, 23, 87]
                    data = line.split(",")
                    cursorobj.execute("insert into studentinfo values (%s, %s, %s, %s)",[data[0].strip(), data[1].strip(), data[2].strip(), data[3].strip() ])
                    connectionobj.commit()
        except Exception as e:
            print(e)
        finally:
            connectionobj.close()
        
        
    def connecttodb(self):
        try:
            connection = mdb.connect(host="localhost", user="studentdbuser", password="studentdbuser", database="studentinfodb", port=3306)
            return connection
        except Exception as e:
            print(e)

    def retranslateUi(self, tableWidgetExample):
        _translate = QtCore.QCoreApplication.translate
        tableWidgetExample.setWindowTitle(_translate("tableWidgetExample", "Table Widget Example"))
        self.btnDisplay.setText(_translate("tableWidgetExample", "Display"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    tableWidgetExample = QtWidgets.QMainWindow()
    ui = Ui_tableWidgetExample()
    ui.setupUi(tableWidgetExample)
    tableWidgetExample.show()
    sys.exit(app.exec())