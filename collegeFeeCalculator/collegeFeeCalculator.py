# Form implementation generated from reading ui file 'collegeFeeCalculator.ui'
#
# Created by: PyQt6 UI code generator 6.8.0
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.

from PyQt6 import QtCore, QtGui, QtWidgets
from PyQt6.QtWidgets import QMessageBox

class Ui_EnrollmentFeeCalculator(object):
    def setupUi(self, EnrollmentFeeCalculator):
        EnrollmentFeeCalculator.setObjectName("EnrollmentFeeCalculator")
        EnrollmentFeeCalculator.resize(800, 600)
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(9)
        EnrollmentFeeCalculator.setFont(font)
        self.centralwidget = QtWidgets.QWidget(parent=EnrollmentFeeCalculator)
        self.centralwidget.setObjectName("centralwidget")
        self.lblFirstName = QtWidgets.QLabel(parent=self.centralwidget)
        self.lblFirstName.setGeometry(QtCore.QRect(200, 170, 81, 16))
        self.lblFirstName.setAutoFillBackground(False)
        self.lblFirstName.setScaledContents(False)
        self.lblFirstName.setObjectName("lblFirstName")
        self.lblLastName = QtWidgets.QLabel(parent=self.centralwidget)
        self.lblLastName.setGeometry(QtCore.QRect(200, 190, 81, 16))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(9)
        self.lblLastName.setFont(font)
        self.lblLastName.setAutoFillBackground(False)
        self.lblLastName.setScaledContents(False)
        self.lblLastName.setObjectName("lblLastName")
        self.lblAge = QtWidgets.QLabel(parent=self.centralwidget)
        self.lblAge.setGeometry(QtCore.QRect(230, 210, 51, 16))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(9)
        self.lblAge.setFont(font)
        self.lblAge.setObjectName("lblAge")
        self.cmbProgram = QtWidgets.QComboBox(parent=self.centralwidget)
        self.cmbProgram.setGeometry(QtCore.QRect(153, 230, 131, 26))
        self.cmbProgram.setObjectName("cmbProgram")
        self.cmbProgram.addItem("")
        self.cmbProgram.addItem("")
        self.cmbProgram.addItem("")
        self.cmbProgram.addItem("")
        self.cmbProgram.addItem("")
        self.chkStateStatus = QtWidgets.QCheckBox(parent=self.centralwidget)
        self.chkStateStatus.setGeometry(QtCore.QRect(220, 250, 61, 20))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(9)
        font.setBold(False)
        font.setWeight(50)
        self.chkStateStatus.setFont(font)
        self.chkStateStatus.setObjectName("chkStateStatus")
        self.btnCalculate = QtWidgets.QPushButton(parent=self.centralwidget)
        self.btnCalculate.setGeometry(QtCore.QRect(170, 290, 113, 32))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(9)
        self.btnCalculate.setFont(font)
        self.btnCalculate.setObjectName("btnCalculate")
        self.txtOutputFee = QtWidgets.QLineEdit(parent=self.centralwidget)
        self.txtOutputFee.setGeometry(QtCore.QRect(270, 330, 113, 21))
        self.txtOutputFee.setReadOnly(True)
        self.txtOutputFee.setObjectName("txtOutputFee")
        self.lblDisplay = QtWidgets.QLabel(parent=self.centralwidget)
        self.lblDisplay.setGeometry(QtCore.QRect(210, 330, 61, 20))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(9)
        self.lblDisplay.setFont(font)
        self.lblDisplay.setObjectName("lblDisplay")
        self.btnReset = QtWidgets.QPushButton(parent=self.centralwidget)
        self.btnReset.setGeometry(QtCore.QRect(230, 400, 113, 32))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(9)
        self.btnReset.setFont(font)
        self.btnReset.setObjectName("btnReset")
        self.btnExit = QtWidgets.QPushButton(parent=self.centralwidget)
        self.btnExit.setGeometry(QtCore.QRect(350, 400, 113, 32))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(9)
        self.btnExit.setFont(font)
        self.btnExit.setObjectName("btnExit")
        self.lblTitle = QtWidgets.QLabel(parent=self.centralwidget)
        self.lblTitle.setGeometry(QtCore.QRect(250, 130, 181, 20))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(11)
        self.lblTitle.setFont(font)
        self.lblTitle.setObjectName("lblTitle")
        self.txtFirstName = QtWidgets.QLineEdit(parent=self.centralwidget)
        self.txtFirstName.setGeometry(QtCore.QRect(280, 170, 113, 21))
        self.txtFirstName.setObjectName("txtFirstName")
        self.txtLastName = QtWidgets.QLineEdit(parent=self.centralwidget)
        self.txtLastName.setGeometry(QtCore.QRect(280, 190, 113, 21))
        self.txtLastName.setObjectName("txtLastName")
        self.txtAge = QtWidgets.QLineEdit(parent=self.centralwidget)
        self.txtAge.setGeometry(QtCore.QRect(280, 210, 113, 21))
        self.txtAge.setObjectName("txtAge")
        EnrollmentFeeCalculator.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(parent=EnrollmentFeeCalculator)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 800, 43))
        self.menubar.setObjectName("menubar")
        EnrollmentFeeCalculator.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(parent=EnrollmentFeeCalculator)
        self.statusbar.setObjectName("statusbar")
        EnrollmentFeeCalculator.setStatusBar(self.statusbar)

        self.retranslateUi(EnrollmentFeeCalculator)
        QtCore.QMetaObject.connectSlotsByName(EnrollmentFeeCalculator)
        self.btnCalculate.clicked.connect(self.calculate_fee)
        self.btnExit.clicked.connect(self.exit)
        self.btnReset.clicked.connect(self.reset)
        self.program_options = {"Computer Science":2000, "Business Administration":1500, "Arts and Humanities":1000, "Sciences":1800}

    # Function calculates the total cost of enrollment for the student.
    def calculate_fee(self):
        # Assign selected value to variable based on added costs per program.
        program_selection = self.cmbProgram.currentText()
        # Assign the program price for the selected program to a variable.
        program_price = self.program_options.get(program_selection)
        # Assign firstName input to variable.
        input_firstName = self.txtFirstName.text()
        # Assign lastName input to variable.
        input_lastName = self.txtLastName.text()
        # Assign age input to variable.
        input_age = self.txtAge.text()
        # Validate input before calculating total cost of enrollment.
        if (input_firstName != "" and input_lastName != "" and input_age.isdigit() and program_selection != "Select a Program"):
            if (self.chkStateStatus.isChecked()):
                # Set state price to 10000 if student is in-state.
                state_price = 10000
            else:
                # Set state price to 15000 is student is out-of-state.
                state_price = 15000
            # Calculate the total fee for enrollment using the price based on in-state vs. out-of-state and the program selection.
            totalEnrollmentFee = state_price + program_price
            # Output the total fee to user.
            self.txtOutputFee.setText("$" + str(totalEnrollmentFee))
        else:
            # Create a message box to output error message.
            msg = QMessageBox()
            # Writes the message that will be output' when an error occurs.
            msg.setText("Please select a program, enter a First name into the 'First Name:' box, Last name into the 'Last Name:' box, and Age into the 'Age:' box.")
            # Executes the message.
            msg.exec()

    # Function that calls the program to exit.
    def exit(self):
        # Exit the program.
        exit()

    # Function that resets the program to default values.
    def reset(self):
        # Set the Age textbox to empty.
        self.txtAge.setText("")
        # Set the output fee textbox to empty.
        self.txtOutputFee.setText("")
        # Set the First name textbox to empty.
        self.txtFirstName.setText("")
        # Set the Last name textbox to empty.
        self.txtLastName.setText("")
        # Set the checkbox for the state status to unchecked.
        self.chkStateStatus.setChecked(False)
        # Set the drop-down menu to the base value of "Select a Program".
        self.cmbProgram.setCurrentIndex(0)


    def retranslateUi(self, EnrollmentFeeCalculator):
        _translate = QtCore.QCoreApplication.translate
        EnrollmentFeeCalculator.setWindowTitle(_translate("EnrollmentFeeCalculator", "MainWindow"))
        self.lblFirstName.setText(_translate("EnrollmentFeeCalculator", "Enter First Name:"))
        self.lblLastName.setText(_translate("EnrollmentFeeCalculator", "Enter Last Name:"))
        self.lblAge.setText(_translate("EnrollmentFeeCalculator", "Enter Age:"))
        self.cmbProgram.setItemText(0, _translate("EnrollmentFeeCalculator", "Select a Program"))
        self.cmbProgram.setItemText(1, _translate("EnrollmentFeeCalculator", "Computer Science"))
        self.cmbProgram.setItemText(2, _translate("EnrollmentFeeCalculator", "Business Administration"))
        self.cmbProgram.setItemText(3, _translate("EnrollmentFeeCalculator", "Arts and Humanities"))
        self.cmbProgram.setItemText(4, _translate("EnrollmentFeeCalculator", "Sciences"))
        self.chkStateStatus.setText(_translate("EnrollmentFeeCalculator", "In-State"))
        self.btnCalculate.setText(_translate("EnrollmentFeeCalculator", "Calculate Fee"))
        self.lblDisplay.setText(_translate("EnrollmentFeeCalculator", "Display Fee:"))
        self.btnReset.setText(_translate("EnrollmentFeeCalculator", "Reset"))
        self.btnExit.setText(_translate("EnrollmentFeeCalculator", "Exit"))
        self.lblTitle.setText(_translate("EnrollmentFeeCalculator", "College Enrollment Fee Calculator"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    EnrollmentFeeCalculator = QtWidgets.QMainWindow()
    ui = Ui_EnrollmentFeeCalculator()
    ui.setupUi(EnrollmentFeeCalculator)
    EnrollmentFeeCalculator.show()
    sys.exit(app.exec())
